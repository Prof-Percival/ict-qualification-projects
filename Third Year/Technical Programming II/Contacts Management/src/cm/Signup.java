package cm;

/**
 *
 * @author Christoph Percival
 */
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Signup extends javax.swing.JFrame {

    /**
     * Creates new form Signup
     */
    
    //private static final Color DEFAULT_TEXT_COLOR = Color.BLACK;
    //private static final Color HOVER_TEXT_COLOR = Color.RED;
    private final String upperString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private final String lowerString = "abcdefghijklmnopqrstuvwxyz";
    private final String numbers = "0123456789";
    private String path = null;
    
    public Signup() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panHeader = new javax.swing.JPanel();
        lblMinimize = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        lblTextHeader = new javax.swing.JLabel();
        panBody = new javax.swing.JPanel();
        lblPassword = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnSignup = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblLogin = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        lblVerifyPassword = new javax.swing.JLabel();
        txtVerifyPassword = new javax.swing.JPasswordField();
        lblPicture = new javax.swing.JLabel();
        lblPictureShow = new javax.swing.JLabel();
        btnLoad = new javax.swing.JButton();
        chkShowHide = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("frmSignup"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        panHeader.setBackground(new java.awt.Color(46, 204, 113));

        lblMinimize.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblMinimize.setForeground(new java.awt.Color(255, 255, 255));
        lblMinimize.setText("-");
        lblMinimize.setToolTipText("Minimize");
        lblMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseClicked(evt);
            }
        });

        lblClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblClose.setForeground(new java.awt.Color(255, 0, 0));
        lblClose.setText("X");
        lblClose.setToolTipText("Exit");
        lblClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
        });

        lblTextHeader.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lblTextHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblTextHeader.setText("Signup");

        javax.swing.GroupLayout panHeaderLayout = new javax.swing.GroupLayout(panHeader);
        panHeader.setLayout(panHeaderLayout);
        panHeaderLayout.setHorizontalGroup(
            panHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panHeaderLayout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(lblTextHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(lblMinimize, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblClose, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panHeaderLayout.setVerticalGroup(
            panHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTextHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClose, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(lblMinimize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        panBody.setBackground(new java.awt.Color(44, 62, 80));
        panBody.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panBody.setLayout(null);

        lblPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(236, 240, 241));
        lblPassword.setLabelFor(txtPassword);
        lblPassword.setText("Password:");
        panBody.add(lblPassword);
        lblPassword.setBounds(30, 140, 100, 30);

        lblUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(236, 240, 241));
        lblUsername.setLabelFor(txtUsername);
        lblUsername.setText("Username:");
        panBody.add(lblUsername);
        lblUsername.setBounds(30, 100, 100, 30);

        txtUsername.setBackground(new java.awt.Color(108, 122, 137));
        txtUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(253, 227, 167));
        panBody.add(txtUsername);
        txtUsername.setBounds(170, 100, 236, 30);

        txtPassword.setBackground(new java.awt.Color(108, 122, 137));
        txtPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(253, 227, 167));
        panBody.add(txtPassword);
        txtPassword.setBounds(170, 140, 236, 30);

        btnSignup.setBackground(new java.awt.Color(30, 139, 195));
        btnSignup.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSignup.setForeground(new java.awt.Color(255, 255, 255));
        btnSignup.setMnemonic('S');
        btnSignup.setText("Signup");
        btnSignup.setToolTipText("Create Account");
        btnSignup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignupActionPerformed(evt);
            }
        });
        panBody.add(btnSignup);
        btnSignup.setBounds(310, 390, 100, 35);

        btnCancel.setBackground(new java.awt.Color(242, 38, 19));
        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.setToolTipText("Cancel");
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panBody.add(btnCancel);
        btnCancel.setBounds(130, 390, 100, 35);

        lblLogin.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblLogin.setForeground(new java.awt.Color(255, 255, 255));
        lblLogin.setText("Already Have an Account? Login");
        lblLogin.setToolTipText("Return To Login Page");
        lblLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLoginMouseClicked(evt);
            }
        });
        panBody.add(lblLogin);
        lblLogin.setBounds(170, 440, 240, 20);

        lblFirstName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(236, 240, 241));
        lblFirstName.setLabelFor(txtFirstName);
        lblFirstName.setText("First Name:");
        panBody.add(lblFirstName);
        lblFirstName.setBounds(30, 20, 100, 30);

        txtFirstName.setBackground(new java.awt.Color(108, 122, 137));
        txtFirstName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtFirstName.setForeground(new java.awt.Color(253, 227, 167));
        panBody.add(txtFirstName);
        txtFirstName.setBounds(170, 20, 236, 30);

        txtLastName.setBackground(new java.awt.Color(108, 122, 137));
        txtLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLastName.setForeground(new java.awt.Color(253, 227, 167));
        panBody.add(txtLastName);
        txtLastName.setBounds(170, 60, 236, 30);

        lblLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(236, 240, 241));
        lblLastName.setLabelFor(txtLastName);
        lblLastName.setText("Last Name:");
        panBody.add(lblLastName);
        lblLastName.setBounds(30, 60, 100, 30);

        lblVerifyPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblVerifyPassword.setForeground(new java.awt.Color(236, 240, 241));
        lblVerifyPassword.setText("Verify Password:");
        panBody.add(lblVerifyPassword);
        lblVerifyPassword.setBounds(30, 180, 140, 30);

        txtVerifyPassword.setBackground(new java.awt.Color(108, 122, 137));
        txtVerifyPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtVerifyPassword.setForeground(new java.awt.Color(253, 227, 167));
        panBody.add(txtVerifyPassword);
        txtVerifyPassword.setBounds(170, 180, 236, 30);

        lblPicture.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPicture.setForeground(new java.awt.Color(236, 240, 241));
        lblPicture.setText("Picture:");
        panBody.add(lblPicture);
        lblPicture.setBounds(100, 220, 70, 30);

        lblPictureShow.setBackground(new java.awt.Color(108, 122, 137));
        lblPictureShow.setOpaque(true);
        panBody.add(lblPictureShow);
        lblPictureShow.setBounds(170, 230, 160, 140);

        btnLoad.setBackground(new java.awt.Color(255, 255, 255));
        btnLoad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLoad.setMnemonic('L');
        btnLoad.setText("Load");
        btnLoad.setToolTipText("Load Image");
        btnLoad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });
        panBody.add(btnLoad);
        btnLoad.setBounds(335, 230, 70, 25);

        chkShowHide.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkShowHide.setForeground(new java.awt.Color(255, 255, 255));
        chkShowHide.setText("Show");
        chkShowHide.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chkShowHide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkShowHideActionPerformed(evt);
            }
        });
        panBody.add(chkShowHide);
        chkShowHide.setBounds(413, 160, 69, 31);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panBody, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseClicked
        // Minimize Form
        this.setState((JFrame.ICONIFIED));
    }//GEN-LAST:event_lblMinimizeMouseClicked

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        // Close App
        switch(JOptionPane.showConfirmDialog(null, "Are You Sure You Want To Exit?", "Exit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)){
            case JOptionPane.YES_OPTION -> System.exit(0);
        }
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLoginMouseClicked
        // Open Login Form
        Login login = new Login();
        login.setVisible(true);
        login.pack();
        login.setLocationRelativeTo(null);
        login.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_lblLoginMouseClicked

    private void chkShowHideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkShowHideActionPerformed
        // Show or Hide Password
        if (chkShowHide.isSelected()){
            chkShowHide.setText("Hide");
            txtPassword.setEchoChar((char)0);
            txtVerifyPassword.setEchoChar((char)0);
        }
        else
        {
            chkShowHide.setText("Show");
            txtPassword.setEchoChar('*');
            txtVerifyPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_chkShowHideActionPerformed

    
    //SIGNUP Event Handling
    private void btnSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignupActionPerformed

        //DO VALIDATIONS
        //                  First Name Validation
        if (!Details.nameIsValid(txtFirstName, "First Name"))
        {
            return;
        }
        
        //                  Last Name Validation
        if (!Details.nameIsValid(txtLastName, "Last Name"))
        {
            return;
        }
        
        //                  Username Validation
        if (!usernameIsValid())
        {
            return;
        }
        
        //Check If Username Already Exists
        if (usernameExists(txtUsername.getText()))
        {
            txtUsername.requestFocusInWindow();
            return;
        }
        
        //                  Password Validation
        if (!passwordIsValid())
        {
            return;
        }
        
        //                  Picture Validation
        if (!Details.imageAttached(path))
        {
            return;
        }
        
        //Validation Complete. Now Send Data To Database
        switch(JOptionPane.showConfirmDialog(null, "Are You Sure You Want To Signup?", "Signup", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)){
            case JOptionPane.YES_OPTION -> {
                try 
                {
                    Connection con = Database.getConnection();
                    PreparedStatement ps; 
                    //ps = con.prepareStatement("Insert Into 'persons' ('FirstName', 'LastName', 'Username', 'Password', 'Picture') Values (?, ?, ?, ?, ?)");
                    ps = con.prepareStatement("INSERT INTO persons (FirstName, LastName, Username, Password, Picture) VALUES (?, ?, ?, ?, ?)");
                    ps.setString(1, txtFirstName.getText());
                    ps.setString(2, txtLastName.getText());
                    ps.setString(3, txtUsername.getText());
                    ps.setString(4, new String(txtPassword.getPassword()));
                    
                    InputStream img = new FileInputStream(new File(path));
                    ps.setBlob(5, img);
                    
                    //Returns number of Rows Affected, 0 if none
                    if (ps.executeUpdate() != 0)
                    {
                        JOptionPane.showMessageDialog(null, "Account Created Successfully", "Signup", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Error While Creating Account", "Signup", JOptionPane.ERROR_MESSAGE);
                    }
                    
                    //Open Login Form
                    Login login = new Login();
                    login.setVisible(true);
                    login.pack();
                    login.setLocationRelativeTo(null);
                    login.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    this.dispose();
                    
                } 
                catch (FileNotFoundException | SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Signup", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(Signup.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnSignupActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        Image image = new Image();
        path = image.browse(lblPictureShow);
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // Close App
        switch(JOptionPane.showConfirmDialog(null, "Are You Sure You Want To Cancel?", "Cancel", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)){
            case JOptionPane.YES_OPTION -> System.exit(0);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    
    
    //VALIDATIONS
    //                          Username Validation
    private boolean usernameIsValid(){
        
        String username = txtUsername.getText();
        
        if (!username.equals(""))
        {
            if (!username.contains(" "))
            {
                if (username.length() < 8)
                {
                    JOptionPane.showMessageDialog(null, "Username Must Be At Least 8 Characters", "Username", JOptionPane.ERROR_MESSAGE);
                    txtUsername.requestFocusInWindow();
                    return false;
                }
                
                 if (username.length() > 20)
                {
                    JOptionPane.showMessageDialog(null, "Username Cannot Be More Than 20 Characters", "Username", JOptionPane.ERROR_MESSAGE);
                    txtUsername.requestFocusInWindow();
                    return false;
                }
                
                for (int i = 0; i < username.length(); i++)
                {
                    if (!(upperString.contains(username.substring(i, i + 1)) || (lowerString.contains(username.substring(i, i + 1))) || (numbers.contains(username.substring(i, i + 1))) ||  username.substring(i, i + 1).equals("-")))
                    {
                        JOptionPane.showMessageDialog(null, "Only Hyphen (-) Special Character is Allowed on Username", "Username", JOptionPane.ERROR_MESSAGE);
                        txtUsername.requestFocusInWindow();
                        return false;
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Username Cannot Contain Space Character", "Username", JOptionPane.ERROR_MESSAGE);
                txtUsername.requestFocusInWindow();
                return false;
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Input Username", "Username", JOptionPane.QUESTION_MESSAGE);
            txtUsername.requestFocusInWindow();
            return false;
        }

        //Check If Username Doesn't Already Exist In The Database
        
        return true;
    }
    
    //                                  Password Validation
    private boolean passwordIsValid()
    {
        String password = new String(txtPassword.getPassword());
        String verPassword = new String(txtVerifyPassword.getPassword());
        
        if (!password.equals(""))
        {
            if (!password.contains(" "))
            {
                if (password.length() < 8)
                {
                    JOptionPane.showMessageDialog(null, "Password Must Have Minimum of 8 Characters", "Password", JOptionPane.ERROR_MESSAGE);
                    txtPassword.requestFocusInWindow();
                    return false;
                }
                
                if (password.length() > 25)
                {
                    JOptionPane.showMessageDialog(null, "Password Can Only Have Maximum of 25 Characters", "Password", JOptionPane.ERROR_MESSAGE);
                    txtPassword.requestFocusInWindow();
                    return false;
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Password Cannot Contain Space Character", "Password", JOptionPane.ERROR_MESSAGE);
                txtPassword.requestFocusInWindow();
                return false;
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Input Password", "Password", JOptionPane.QUESTION_MESSAGE);
            txtPassword.requestFocusInWindow();
            return false;
        }
        
        if (verPassword.equals(("")))
        {
            JOptionPane.showMessageDialog(null, "Verify Password", "Password", JOptionPane.ERROR_MESSAGE);
            txtVerifyPassword.requestFocusInWindow();
            return false;
        }
        
        //Check If Password Match
        if (!password.equals(verPassword))
        {
            JOptionPane.showMessageDialog(null, "Passwords Do Not Match", "Password", JOptionPane.ERROR_MESSAGE);
            txtPassword.requestFocusInWindow();
            return false;
        }
        
        return true;
    }
    
    //Check If Username Exists
    private boolean usernameExists(String username)
    {
        try
        {
            Connection con = Database.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            
            ps = con.prepareStatement("SELECT Username FROM persons WHERE Username LIKE ?");
            ps.setString(1, username);
            
            rs = ps.executeQuery();
            
            if (rs.next())
            {
                if (username.equals(rs.getString(1)))
                {
                    JOptionPane.showMessageDialog(null, "Username Already Exists", "Username - Signup", JOptionPane.ERROR_MESSAGE);
                    return true;
                }
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Searching Username", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex.getMessage());
            return true;
        }
            
        return false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Signup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnSignup;
    private javax.swing.JCheckBox chkShowHide;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblPictureShow;
    private javax.swing.JLabel lblTextHeader;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblVerifyPassword;
    private javax.swing.JPanel panBody;
    private javax.swing.JPanel panHeader;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JPasswordField txtVerifyPassword;
    // End of variables declaration//GEN-END:variables
}
